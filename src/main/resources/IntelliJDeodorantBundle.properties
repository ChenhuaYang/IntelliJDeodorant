intellijdeodorant=IntelliJDeodorant
method.column.title=Method
move.to.column.title=Move to
dependencies.column.title=Source/Target accessed members
select.all.button=Select all
deselect.all.button=Deselect all
refactor.button=Refactor
refresh.button=Refresh
total.label=Total:
advanced.settings=Advanced settings
java.member.is.not.valid=Java method is not valid anymore
press.refresh.to.find.refactoring.opportunities=Press Refresh button to find refactoring opportunities
target.class.is.not.valid=Target class is not valid anymore
feature.envy.smell.name=Feature Envy
feature.envy.detect.indicator.status=Detection of Feature Envy smells
feature.envy.parsing.indicator=Parsing Java project
feature.envy.identification.indicator=Identification of Move Method refactoring opportunities
long.method.smell.name=Long Method
long.method.detect.indicator.status=Identification of Extract Method refactoring opportunities
long.method.panel.source.method=Source Method
long.method.panel.variable.criterion=Variable Criterion
long.method.panel.block.based.region=Block-Based Region
long.method.panel.duplicated.extracted=Duplicated/Extracted
extract.method.refactoring.name=Extract Method
report.error.progress.dialog.text=Submitting error report
report.error.to.plugin.vendor=Report to IntelliJDeodorant GitHub Issue Tracker
git.issue.text=<a href="{0}">Created issue {1}</a>. Thank you for your feedback! \n \
  Make sure you have the latest plugin version.
git.issue.duplicate.text=<a href="{0}">A similar issues were already reported (#{1})</a>. \n \
  Thank you for your feedback! Make sure you have the latest plugin version.
report.error.connection.failure=Could not communicate with GitHub.\n\
  Please <a href="{0}">create issue</a>.
project.compiling.indicator.text=Compiling Project
compilation.error.notification.text=Compilation errors were detected in the project. Fix the errors before using IntelliJDeodorant.
god.class.smell.name=God Class
god.class.identification.indicator=Identification of Extract Class refactoring opportunities
god.class.identification.indicator.preconditions=Checking Preconditions
god.class.panel.source.class=Source Class/General Concept
god.class.panel.extractable.concept=Extractable Concept
god.class.panel.source.extracted.members=Source/Extracted accessed members
god.class.dialog.title=Extract Class Refactoring
god.class.dialog.extracted.class.name=Extracted Class Name
god.class.dialog.restore.default=Restore Default Class Name
god.class.dialog.class.name.not.valid=The class name is not valid
god.class.dialog.class.name.already.exists=The class name already exists in the package
god.class.dialog.class.name.already.exists.javalang=The class name already exists in package java.lang
export=Export
type.state.checking.identification.indicator=Identification of Type Checking code smells
type.state.checking.smell.name=Type-State Checking
type.state.checking.panel.column.method=Type Checking Method
type.state.checking.panel.column.refactoring.type=Refactoring Type
type.state.checking.panel.column.system.occurrences=System-Level Occurrences
type.state.checking.panel.column.class.occurrences=Class-Level Occurrences
type.state.checking.panel.column.average.statements=Average #statements per case
replace.type.code.with.state.strategy.name=Replace Type Code with State/Strategy
replace.type.code.with.state.strategy.dialog.error.invalid=Type name is not valid
replace.type.code.with.state.strategy.dialog.error.exists.package=Type with this name already exists in the package
replace.type.code.with.state.strategy.dialog.error.exists.javalang=Type with this name already exists in package java.lang
replace.type.code.with.state.strategy.dialog.error.chosen=This name is already chosen
replace.type.code.with.state.strategy.restore.title=Restore Defaults
replace.type.code.with.state.strategy.state.variable=State Variable:
replace.type.code.with.state.strategy.abstract.state.strategy.type.name=Abstract State/Strategy Type Name:
replace.type.code.with.state.strategy.named.constants=Named Constants:
replace.type.code.with.state.strategy.concrete.state.strategy.type.name=Concrete State/Strategy Type Names:
replace.conditional.with.polymorphism.name=Replace Conditional with Polymorphism